The ``100-matrix_mul`` module
=============================

Using ``matrix_mul``
--------------------

	>>> matrix_mul = __import__("100-matrix_mul").matrix_mul

#>>> 0 < len(__import__("100-matrix_mul").__doc__)

#>>> 0 < len(__import__("100-matrix_mul").matrix_mul.__doc__)

	>>> matrix_mul(0, 0)
	Traceback (most recent call last):
	...
	TypeError: m_a must be a list

	>>> matrix_mul([], 0)
	Traceback (most recent call last):
	...
	TypeError: m_b must be a list

	>>> matrix_mul([0], [])
	Traceback (most recent call last):
	...
	TypeError: m_a must be a list of lists

	>>> matrix_mul([[]], [0])
	Traceback (most recent call last):
	...
	TypeError: m_b must be a list of lists

	>>> matrix_mul([[]], [[]])
	Traceback (most recent call last):
	...
	ValueError: m_a can't be empty

	>>> matrix_mul([[0]], [[]])
	Traceback (most recent call last):
	...
	ValueError: m_b can't be empty

	>>> matrix_mul([['A', 0], [0, 0]], [[0, 0], ['A', 0]])
	Traceback (most recent call last):
	...
	TypeError: m_a should contain only integers or floats

	>>> matrix_mul([[0, 0], [0, 0]], [[0, 0], ['A', 0]])
	Traceback (most recent call last):
	...
	TypeError: m_b should contain only integers or floats

	>>> matrix_mul([[0], [0, 0]], [[0, 0], [0]])
	Traceback (most recent call last):
	...
	TypeError: each row of m_a must should be of the same size

	>>> matrix_mul([[0], [0]], [[0, 0], [0]])
	Traceback (most recent call last):
	...
	TypeError: each row of m_b must should be of the same size

	>>> matrix_mul([[0], [0]], [[0], [0]])
	Traceback (most recent call last):
	...
	ValueError: m_a and m_b can't be multiplied
